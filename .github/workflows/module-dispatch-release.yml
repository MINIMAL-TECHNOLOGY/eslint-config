name: Dispatch NPM Release

on:
  workflow_dispatch:
    inputs:
      module:
        type: choice
        description: Build Mode (common|node|react|next|react-native)
        options:
          - common
          - node
          - react
          - next
          - react-native

      build_mode:
        type: choice
        description: Build Mode (patch|minor|major)
        options:
          - patch
          - minor
          - major

env:
  MODULE: ${{ github.event.inputs.module }}
  BUILD_MODE: ${{ github.event.inputs.build_mode }}

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.16.0"
          registry-url: "https://registry.npmjs.org"

      - name: Setup Git
        run: |
          git config user.name "mt-ci gh-action"
          git config user.email "mt-ci@gh-action.none"

      - name: Verify Module + Build mode
        run: |
          echo "mt-ci | Module: $MODULE | Build mode: $BUILD_MODE"

      - name: Install dependencies ðŸ”§
        run: |
          npm install -g pnpm
          pnpm install

      - name: Building + Versioning application artifact
        run: |
          echo "Module: $MODULE | Build mode: $BUILD_MODE"

          echo "Cleaning up release folder"
          rm -rf packages/$MODULE/dist

          echo "Compiling $MODULE"
          pnpm --filter "{packages/$MODULE}" compile

          echo "Versioning release folder"
          pnpm --filter "{packages/$MODULE}" version $BUILD_MODE

      - name: Publish package on NPM ðŸ“¦
        run: |
          cd packages/$MODULE
          pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

      - name: Push latest version to repository
        run: |
          module=${{ github.event.inputs.module }}
          cd packages/$MODULE

          PACKAGE_PATH="./package.json"
          VERSION=$(jq -r .version $PACKAGE_PATH)

          git fetch
          git checkout develop
          git add .
          git commit -m "Module: $MODULE | Build mode: $BUILD_MODE | Version: $VERSION | Release latest src"
          git push origin develop

          git checkout main
          git merge --allow-unrelated-histories develop
          git push origin main
